{"version":3,"sources":["webpack:///./src/app/+layout/custom/custom-routing.module.ts","webpack:///./src/app/+layout/custom/custom.component.css","webpack:///./src/app/+layout/custom/custom.component.html","webpack:///./src/app/+layout/custom/custom.component.ts","webpack:///./src/app/+layout/custom/custom.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEF;AAErD,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iEAAe;KAC3B,CAAC,CAAC;AAMH;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAJ/B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;ACdhC,mB;;;;;;;;;;;ACAA,ojBAAojB,oBAAoB,sBAAsB,iBAAiB,gBAAgB,qBAAqB,yBAAyB,8EAA8E,uDAAuD,qCAAqC,gFAAgF,MAAM,2BAA2B,8EAA8E,sCAAsC,cAAc,EAAE,OAAO,KAAK,2HAA2H,6DAA6D,UAAU,iBAAiB,IAAI,kBAAkB,QAAQ,iBAAiB,QAAQ,8BAA8B,UAAU,qBAAqB,qBAAqB,sBAAsB,QAAQ,eAAe,8HAA8H,qGAAqG,0CAA0C,YAAY,6C;;;;;;;;;;;;;;;;;;;;;;;ACAjsD;AAExB;AAMjC;IAAA;IAOA,CAAC;IANC;;OAEG;IACH,yCAAe,GAAf;QACE,oDAAkB,EAAE,CAAC;IACvB,CAAC;IANU,eAAe;QAJ3B,+DAAS,CAAC;;;SAGV,CAAC;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRa;AACM;AACA;AAEe;AACT;AAEP;AAW9C;IAAA;IAA4B,CAAC;IAAhB,YAAY;QATxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,4DAAY;gBACZ,0EAAmB;gBACnB,2DAAS;aACV;YACD,YAAY,EAAE,CAAC,iEAAe,CAAC;SAChC,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ","file":"layout-custom-custom-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CustomComponent } from './custom.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: CustomComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<mk-box header=\\\"About custom layout\\\" [isCollapsable]=\\\"false\\\" [isRemovable]=\\\"false\\\">\\r\\n  <p>You can completely disable layout components to create custom page layout like <a routerLink=\\\"/login\\\">Login</a> and <a routerLink=\\\"/register\\\">Register</a> pages.</p>\\r\\n</mk-box>\\r\\n\\r\\n<mk-box header=\\\"Configuration\\\" [isCollapsable]=\\\"false\\\" [isRemovable]=\\\"false\\\">\\r\\n  <p>First you will need to import LayoutService and subscribe to isCustomLayout in the main app component:</p>\\r\\n  <pre><code class=\\\"language-typescript\\\">import &#123; Component, OnInit } from '@angular/core';\\r\\nimport &#123; LayoutService } from '../../../src';\\r\\n\\r\\n@Component(&#123;\\r\\n  selector: 'app-root',\\r\\n  templateUrl: './app.component.html'\\r\\n&#125;)\\r\\nexport class AppComponent implements OnInit &#123;\\r\\n  public isCustomLayout: boolean;\\r\\n\\r\\n  constructor(\\r\\n    private layoutService: LayoutService\\r\\n  ) &#123;&#125;\\r\\n\\r\\n  ngOnInit() &#123;\\r\\n    this.layoutService.isCustomLayout.subscribe((value: boolean) => &#123;\\r\\n      this.isCustomLayout = value;\\r\\n    &#125;);\\r\\n  }\\r\\n}</code></pre>\\r\\n\\r\\n  <br/>\\r\\n  <p>Wrap the main component html like so:</p>\\r\\n  <pre><code class=\\\"language-html\\\">&lt;ng-container *ngIf=\\\"isCustomLayout else noCustomLayout\\\"&gt;\\r\\n  &lt;router-outlet&gt;&lt;/router-outlet&gt;\\r\\n&lt;/ng-container&gt;\\r\\n&lt;ng-template #layoutEnabled&gt;\\r\\n  &lt;mk-layout-wrapper&gt;\\r\\n    ...\\r\\n  &lt;/mk-layout-wrapper&gt;\\r\\n&lt;ng-template&gt;</code></pre>\\r\\n\\r\\n<br/>\\r\\n<p>Configure the router:</p>\\r\\n<pre><code class=\\\"language-typescript\\\">\\r\\n  ...\\r\\n  , &#123;\\r\\n    path: 'login',\\r\\n    loadChildren: 'app/login/login.module#LoginModule',\\r\\n    data: &#123;\\r\\n      customLayout: true\\r\\n    &#125;\\r\\n  &#125;,\\r\\n  ...\\r\\n</code></pre>\\r\\n</mk-box>\\r\\n\"","import { Component, AfterViewInit } from '@angular/core';\r\n\r\nimport * as Prism from 'prismjs';\r\n\r\n@Component({\r\n  templateUrl: './custom.component.html',\r\n  styleUrls: ['./custom.component.css']\r\n})\r\nexport class CustomComponent implements AfterViewInit {\r\n  /**\r\n   * @method ngAfterViewInit\r\n   */\r\n  ngAfterViewInit() {\r\n    Prism.highlightAll();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { CustomRoutingModule } from './custom-routing.module';\r\nimport { CustomComponent } from './custom.component';\r\n\r\nimport { BoxModule } from 'angular-admin-lte';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    CustomRoutingModule,\r\n    BoxModule\r\n  ],\r\n  declarations: [CustomComponent]\r\n})\r\nexport class CustomModule { }\r\n"],"sourceRoot":""}