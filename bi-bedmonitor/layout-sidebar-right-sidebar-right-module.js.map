{"version":3,"sources":["webpack:///./src/app/+layout/sidebar-right/sidebar-right-routing.module.ts","webpack:///./src/app/+layout/sidebar-right/sidebar-right.component.html","webpack:///./src/app/+layout/sidebar-right/sidebar-right.component.ts","webpack:///./src/app/+layout/sidebar-right/sidebar-right.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEW;AAElE,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;KACjC,CAAC,CAAC;AAMH;IAAA;IAAyC,CAAC;IAA7B,yBAAyB;QAJrC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,yBAAyB,CAAI;IAAD,gCAAC;CAAA;AAAJ;;;;;;;;;;;;ACdtC,4iBAA4iB,2BAA2B,2BAA2B,4BAA4B,mC;;;;;;;;;;;;;;;;;;;;;;;ACArkB;AAExB;AAMjC;IAAA;IAOA,CAAC;IANC;;OAEG;IACH,+CAAe,GAAf;QACE,oDAAkB,EAAE,CAAC;IACvB,CAAC;IANU,qBAAqB;QAJjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;SAE9B,CAAC;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;;;;;;;;;;;;;;;ACRO;AACM;AAE4B;AACT;AAEpB;AAU9C;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAR9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,uFAAyB;gBACzB,2DAAS;aACV;YACD,YAAY,EAAE,CAAC,8EAAqB,CAAC;SACtC,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ","file":"layout-sidebar-right-sidebar-right-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SidebarRightComponent } from './sidebar-right.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: SidebarRightComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SidebarRightRoutingModule { }\r\n","module.exports = \"<mk-box header=\\\"About sidebar right component\\\" [isCollapsable]=\\\"false\\\" [isRemovable]=\\\"false\\\">\\r\\n  <p>The sidebar right component is optional and you can add any custom HTML.<br/>It can be toggled with sidebar right button of the header or programmatically with layout.sidebarRightCollapsed().<br/>You can also subscribe to sidebar right toggle status with layout.isSidebarRightCollapsed.</p>\\r\\n</mk-box>\\r\\n\\r\\n<mk-box header=\\\"HTML\\\" [isCollapsable]=\\\"false\\\" [isRemovable]=\\\"false\\\">\\r\\n  <pre><code class=\\\"language-html\\\">&lt;mk-layout-sidebar-right&gt;\\r\\n  //Custom HTML\\r\\n&lt;/mk-layout-sidebar-right&gt;\\r\\n</code></pre>\\r\\n</mk-box>\\r\\n\"","import { Component, AfterViewInit } from '@angular/core';\r\n\r\nimport * as Prism from 'prismjs';\r\n\r\n@Component({\r\n  selector: 'app-sidebar-right',\r\n  templateUrl: './sidebar-right.component.html'\r\n})\r\nexport class SidebarRightComponent implements AfterViewInit {\r\n  /**\r\n   * @method ngAfterViewInit\r\n   */\r\n  ngAfterViewInit() {\r\n    Prism.highlightAll();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SidebarRightRoutingModule } from './sidebar-right-routing.module';\r\nimport { SidebarRightComponent } from './sidebar-right.component';\r\n\r\nimport { BoxModule } from 'angular-admin-lte';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SidebarRightRoutingModule,\r\n    BoxModule\r\n  ],\r\n  declarations: [SidebarRightComponent]\r\n})\r\nexport class SidebarRightModule { }\r\n"],"sourceRoot":""}