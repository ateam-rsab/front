define(['initialize'], function (initialize) {
	'use strict';
	initialize.controller('HazardAndVulnerabilityAssessmentCtrl', ['$rootScope', '$scope', 'ModelItem', 'ManageSarpras', 'DateHelper',
		function ($rootScope, $scope, ModelItem, ManageSarpras, DateHelper) {
			$scope.item = {};
			$scope.totalRisk = 0;
			$scope.totalProb = 0;
			$scope.totalSev = 0;
			ModelItem.get("AplikasiK3/HazardAndVulnerabilityAssessment").then(function (data) {
				$scope.item = data;
				$scope.item.probability = {
					"id": 0
				};
				$scope.item.humanImpact = {
					"id": 0
				};
				$scope.item.propertyImpact = {
					"id": 0
				};
				$scope.item.businessImpact = {
					"id": 0
				};
				$scope.item.preparedness = {
					"id": 0
				};
				$scope.item.internalResponse = {
					"id": 0
				};
				$scope.item.externalResponse = {
					"id": 0
				};
				$scope.totalRisk = 0;
				$scope.totalProb = 0;
				$scope.totalSev = 0;
				$scope.now = new Date();
				$scope.dataVOloaded = true;
			}, function errorCallBack(err) { });
			$scope.no = 1;


			// $scope.item.propertyImpact = "";
			// $scope.item.businessImpact = "";
			// $scope.item.preparedness = "";
			// $scope.item.internalResponse = "";
			// $scope.item.externalResponse = "";

			ManageSarpras.getListData("JenisHVA&select=id,nama").then(function (dat) {
				// debugger;
				$scope.listJenis = dat.data;
			});

			// FindSarpras.getMasterJenisLinen("jenis-linen/find-all-jenis-linen/").then(function(dat){
			// 	$scope.sourceMasterJenisLinen = dat.data.data;
			// });
			// FindSarpras.getMasterProsesCuci("proses-cuci/find-all-proses-cuci/").then(function(dat){
			// 	$scope.sourceMasterProsesCuci= dat.data.data;
			// });

			// FindSarpras.getMasterProduk("mapping-cycle/find-nama-bahan/").then(function(dat){
			// 	$scope.sourceMasterProduk= dat.data;
			// });

			// // mapping-jenis-linen-ke-bahan/find-produk-by-kelompok-produk/
			// FindSarpras.getMasterSatuan("service/list-generic/?view=SatuanStandar&select=id,satuanStandar").then(function(dat){
			// 	$scope.sourceMasterSatuan= dat;
			// });
			$scope.listKeterangan = [
				{
					"keterangan": "N/A",
					"id": 0,
				},
				{
					"keterangan": "Rendah",
					"id": 1,
				},
				{
					"keterangan": "Sedang",
					"id": 2,
				},
				{
					"keterangan": "Tinggi",
					"id": 3,
				},
			]

			// $scope.listJenis = [
			// 	{
			// 		"nama": "Bahaya Alam",
			// 		"id": 1,
			// 	},
			// 	{
			// 		"nama": "Bahaya Teknologi",
			// 		"id": 2,
			// 	},
			// 	{
			// 		"nama": "Bahaya Manusia",
			// 		"id": 3,
			// 	},
			// 	{
			// 		"nama": "Bahaya Material",
			// 		"id": 4,
			// 	}

			// ]




			$scope.daftarDataPegawai = new kendo.data.DataSource({
				data: [

				],
				aggregate: [
					{ field: "probability.id", aggregate: "average" },
					{ field: "humanImpact.id", aggregate: "average" },
					{ field: "propertyImpact.id", aggregate: "average" },
					{ field: "businessImpact.id", aggregate: "average" },
					{ field: "preparedness.id", aggregate: "average" },
					{ field: "internalResponse.id", aggregate: "average" },
					{ field: "externalResponse.id", aggregate: "average" }
					// { field: "risk", aggregate: "totalRisk" }

				]

			});

			$scope.columnDataPegawai = [
				{
					"field": "event",
					"title": "<center>Peristiwa</center>",
					"width": "100px",
					footerTemplate: "Average:"
				},
				{
					"title": "<center> Keparahan = (Besarnya Dampak - Mitigasi) </center>",
					columns: [
						{
							"field": "probability.id",
							"title": "Kemungkinan",
							attributes: { align: "center" },
							"width": "100px",
							footerTemplate: "<center>#= average #</center> "

						},
						{
							"field": "humanImpact.id",
							"title": "Dampak Manusia",
							attributes: { align: "center" },
							"width": "100px",
							footerTemplate: "<center>#= average #</center> "
						},
						{
							"field": "propertyImpact.id",
							"title": "Dampak Peralatan",
							attributes: { align: "center" },
							"width": "100px",
							footerTemplate: "<center>#= average #</center> "
						},
						{
							"field": "businessImpact.id",
							"title": "Dampak Bisnis",
							attributes: { align: "center" },
							"width": "100px",
							footerTemplate: "<center>#= average #</center> "
						},
						{
							"field": "preparedness.id",
							"title": "Kesiapsiagaan",
							attributes: { align: "center" },
							"width": "100px",
							footerTemplate: "<center>#= average #</center> "
						},
						{
							"field": "internalResponse.id",
							"title": "Respon Internal",
							attributes: { align: "center" },
							"width": "100px",
							footerTemplate: "<center>#= average #</center> "
						},
						{
							"field": "externalResponse.id",
							"title": "Respon Eksternal",
							attributes: { align: "center" },
							"width": "100px",
							footerTemplate: "<center>#= average #</center> "
						},
						{
							"field": "risk",
							"title": "Tingkat Risiko",
							attributes: { align: "center" },
							"width": "100px",
							footerTemplate: "<center> {{totalRisk1(totalProb,totalSev)}} </center> "
						}
					]
				}
			];
			$scope.dateOptions = {
				start: "decade",
				depth: "decade"
			}
			$scope.totalRisk1 = function (totalProb, totalSev) {
				$scope.totalRisk = (totalProb * totalSev);
				return Math.round($scope.totalRisk * 100) + "%";
			}

			// window.calculateRisk = function () {
			// 	var data = gridDataSource.data();
			// 	var total = 0;
			// 	for (var i = 0; i < data.length; i++) {
			// 		if (data[i].EligibleForDiscount === true) {
			// 			total += data[i].Price;
			// 		}
			// 	}
			// 	return total;
			// };

			$scope.satuan = function () {
				$scope.item.satuanKg = $scope.item.mesin.satuanStandarKapasitas;
				$scope.item.kapasitas = $scope.item.mesin.kapasitas;
			};
			$scope.satuanBahan = function () {
				$scope.item.satuanStandar = $scope.item.namaProduk.satuanStandar;
			};

			$scope.daftarBahanLinen = new kendo.data.DataSource({
				data: []
			});
			$scope.columndaftarBahanLinen = [
				{
					"field": "no",
					"title": "<h3 align=center>No</h3>",
					"width": "30px"
				}, {
					"field": "namaBahan.namaProduk",
					"title": "<h3 align=center>Nama Bahan<h3>",
					"width": "200px"
				}, {
					"field": "jumlah",
					"title": "<h3 align=center>Jumlah<h3>",
					"width": "100px"
				}, {
					"field": "satuan",
					"title": "<h3 align=center>Satuan<h3>",
					"width": "100px"
				}, {
					command: {
						text: "Hapus",
						width: "70px",
						align: "center",
						click: $scope.removeDataBahanLinen
					},
					title: "<h3 align=center>Action</h3>",
					width: "80px"
				}];

			var arrHaz = [];
			$scope.tambahDataHazard = function () {
				if ($scope.item.probability.id == undefined) {
					$scope.item.probability = {
						id: 0
					}
				}
				if ($scope.item.humanImpact.id == undefined) {
					$scope.item.humanImpact = {
						id: 0
					}
				}
				if ($scope.item.propertyImpact.id == undefined) {
					$scope.item.propertyImpact = {
						id: 0
					}
				}
				if ($scope.item.businessImpact.id == undefined) {
					$scope.item.businessImpact = {
						id: 0
					}
				}
				if ($scope.item.preparedness.id == undefined) {
					$scope.item.preparedness = {
						id: 0
					}
				}
				if ($scope.item.internalResponse.id == undefined) {
					$scope.item.internalResponse = {
						id: 0
					}
				}
				if ($scope.item.externalResponse.id == undefined) {
					$scope.item.externalResponse = {
						id: 0
					}
				}
				var tempDataHazard = {
					"event": $scope.item.nama,
					"probability": $scope.item.probability,
					"humanImpact": $scope.item.humanImpact,
					"propertyImpact": $scope.item.propertyImpact,
					"businessImpact": $scope.item.businessImpact,
					"preparedness": $scope.item.preparedness,
					"internalResponse": $scope.item.internalResponse,
					"externalResponse": $scope.item.externalResponse,
					"risk": Math.round(((($scope.item.probability.id) / 3) * (($scope.item.humanImpact.id + $scope.item.propertyImpact.id + $scope.item.businessImpact.id + $scope.item.preparedness.id + $scope.item.internalResponse.id + $scope.item.externalResponse.id) / 18)) * 100) + "%"
				}
				console.log($scope.item.probability.id);
				arrHaz.push(tempDataHazard);
				$scope.daftarDataPegawai.add(tempDataHazard);
				var prob = $scope.daftarDataPegawai._aggregateResult["probability.id"].average;
				var hi = $scope.daftarDataPegawai._aggregateResult["humanImpact.id"].average;
				var pi = $scope.daftarDataPegawai._aggregateResult["propertyImpact.id"].average;
				var bi = $scope.daftarDataPegawai._aggregateResult["businessImpact.id"].average;
				var prep = $scope.daftarDataPegawai._aggregateResult["preparedness.id"].average;
				var ir = $scope.daftarDataPegawai._aggregateResult["internalResponse.id"].average;
				var er = $scope.daftarDataPegawai._aggregateResult["externalResponse.id"].average;
				$scope.totalProb = (prob / 3);
				$scope.totalSev = (hi + pi + bi + prep + ir + er) / 18;
				// $scope.item.probability.id = 0;
				// $scope.item.humanImpact.id = 0;
				// $scope.item.propertyImpact.id = 0;
				// $scope.item.businessImpact.id = 0;
				// $scope.item.preparedness.id = 0;
				// $scope.item.internalResponse.id = 0;
				// $scope.item.externalResponse.id = 0;
				$scope.item.nama = "";
				$scope.item.probability = "";
				$scope.item.humanImpact = "";
				$scope.item.propertyImpact = "";
				$scope.item.businessImpact = "";
				$scope.item.preparedness = "";
				$scope.item.internalResponse = "";
				$scope.item.externalResponse = "";
			}
			// var prob = $scope.daftarDataPegawai._aggregateResult["probability.id"].average;

			$scope.Save = function () {
				debugger;
				// var prob = $scope.daftarDataPegawai._aggregateResult["probability.id"].average;
				// var hi = $scope.daftarDataPegawai._aggregateResult["humanImpact.id"].average;
				// var pi = $scope.daftarDataPegawai._aggregateResult["propertyImpact.id"].average;
				// var bi = $scope.daftarDataPegawai._aggregateResult["businessImpact.id"].average;
				// var prep = $scope.daftarDataPegawai._aggregateResult["preparedness.id"].average;
				// var ir = $scope.daftarDataPegawai._aggregateResult["internalResponse.id"].average;
				// var er = $scope.daftarDataPegawai._aggregateResult["externalResponse.id"].average;
				// var totalProb = (prob / 3);
				// var totalSev = (hi + pi + bi + prep + ir + er) / 18;
				// console.log(totalProb);
				var detail = arrHaz;
				var i = 0;
				var detailHVA = [];
				detail.forEach(function (data) {
					var data = {
						"propertyImpact": data.propertyImpact.id,
						"preparedness": data.preparedness.id,
						"event": data.event,
						"probability": data.probability.id,
						"businessImpact": data.businessImpact.id,
						"externalResponse": data.externalResponse.id,
						"internalResponse": data.internalResponse.id,
						"humanImpact": data.humanImpact.id
					}
					detailHVA[i] = data;
					i++;
					debugger;
				})
				// var data = {
				// 	"detailHVASet": detailHVA,
				// 	"totalProbability": $scope.totalProb,
				// 	"jenisHVA": {
				// 		"id": $scope.item.jenis.id
				// 	},
				// 	"totalRisk": ($scope.totalProb * $scope.totalSev),
				// 	"totalSeverity": $scope.totalSev,
				// 	"akhirPeriode": new Date($scope.item.tglAkhir).getTime(),
				// 	"awalPeriode": new Date($scope.item.tglAwal).getTime()
				// }
				var data
				if (noRec == undefined) {
					debugger;
					data = {
						"jenisHVA": {
							"id": $scope.item.jenis.id,
							"nama": $scope.item.jenis.nama
						},
						"periodeTahun": tanggalAwal,
						"noRec": "",
						"detailHVA": detailHVA
					}
				}else{
					debugger;
					data = {
						"jenisHVA": {
							"id": $scope.item.jenis.id,
							"nama": $scope.item.jenis.nama
						},
						"periodeTahun": tanggalAwal,
						"noRec": noRec,
						"detailHVASet": detailHVA
					}
				}
				

				console.log(JSON.stringify(detailHVA));
				debugger;
				ManageSarpras.saveDataSarPras(data, "hva/save-hva/").then(function (e) {
					console.log(JSON.stringify(e.data));
					$scope.Back();
				});
				$scope.item.tglAwal = "";
				$scope.item.tglAkhir = "";
				$scope.item.jenis = "";
				$scope.item.nama = "";
				$scope.item.probability = "";
				$scope.item.humanImpact = "";
				$scope.item.propertyImpact = "";
				$scope.item.businessImpact = "";
				$scope.item.preparedness = "";
				$scope.item.internalResponse = "";
				$scope.item.externalResponse = "";
				$scope.daftarDataPegawai = [];
			};



			$scope.removeDataBahanLinen = function (e) {
				e.preventDefault();

				var grid = this;
				var row = $(e.currentTarget).closest("tr");

				$scope.tempDataBahanLinen = $scope.daftarBahanLinen
					.filter(function (el) {
						return el.name !== grid[0].name;
					});
				grid.removeRow(row);

			};
			var tanggalAwal;
			var noRec;
			$scope.$watch('item.tglAwal', function (selectedData) {
				debugger
				tanggalAwal = DateHelper.getTahunFormatted($scope.item.tglAwal);
				if ($scope.item.jenis != undefined) {
					$scope.daftarDataPegawai = new kendo.data.DataSource({
						data: [

						],
						aggregate: [
							{ field: "probability.id", aggregate: "average" },
							{ field: "humanImpact.id", aggregate: "average" },
							{ field: "propertyImpact.id", aggregate: "average" },
							{ field: "businessImpact.id", aggregate: "average" },
							{ field: "preparedness.id", aggregate: "average" },
							{ field: "internalResponse.id", aggregate: "average" },
							{ field: "externalResponse.id", aggregate: "average" }
							// { field: "risk", aggregate: "totalRisk" }

						]
					});
					ManageSarpras.getOrderList("hva/find-hva/?periodeTahun=" + tanggalAwal + "&&jenisHVA=" + $scope.item.jenis.id).then(function (dat) {
						debugger;
						noRec = dat.data.data.noRec;
						dat.data.data.detailHVA.forEach(function (datas) {

							datas.businessImpact = {
								"id": datas.businessImpact
							}
							datas.externalResponse = {
								"id": datas.externalResponse
							}
							datas.humanImpact = {
								"id": datas.humanImpact
							}
							datas.internalResponse = {
								"id": datas.internalResponse
							}
							datas.preparedness = {
								"id": datas.preparedness
							}
							datas.probability = {
								"id": datas.probability
							}
							datas.propertyImpact = {
								"id": datas.propertyImpact
							}

							datas.risk = Math.round((((datas.probability.id) / 3) * ((datas.humanImpact.id + datas.propertyImpact.id + datas.businessImpact.id + datas.preparedness.id + datas.internalResponse.id + datas.externalResponse.id) / 18)) * 100) + "%"
							$scope.daftarDataPegawai.add(datas);
							var prob = $scope.daftarDataPegawai._aggregateResult["probability.id"].average;
							var hi = $scope.daftarDataPegawai._aggregateResult["humanImpact.id"].average;
							var pi = $scope.daftarDataPegawai._aggregateResult["propertyImpact.id"].average;
							var bi = $scope.daftarDataPegawai._aggregateResult["businessImpact.id"].average;
							var prep = $scope.daftarDataPegawai._aggregateResult["preparedness.id"].average;
							var ir = $scope.daftarDataPegawai._aggregateResult["internalResponse.id"].average;
							var er = $scope.daftarDataPegawai._aggregateResult["externalResponse.id"].average;
							$scope.totalProb = (prob / 3);
							$scope.totalSev = (hi + pi + bi + prep + ir + er) / 18;
						})

					});
				}
			});

			$scope.$watch('item.jenis', function (selectedData) {
				debugger

				if ($scope.item.tglAwal != undefined) {
					$scope.daftarDataPegawai = new kendo.data.DataSource({
						data: [

						],
						aggregate: [
							{ field: "probability.id", aggregate: "average" },
							{ field: "humanImpact.id", aggregate: "average" },
							{ field: "propertyImpact.id", aggregate: "average" },
							{ field: "businessImpact.id", aggregate: "average" },
							{ field: "preparedness.id", aggregate: "average" },
							{ field: "internalResponse.id", aggregate: "average" },
							{ field: "externalResponse.id", aggregate: "average" }
							// { field: "risk", aggregate: "totalRisk" }

						]
					});
					ManageSarpras.getOrderList("hva/find-hva/?periodeTahun=" + tanggalAwal + "&&jenisHVA=" + $scope.item.jenis.id).then(function (dat) {
						debugger;
						noRec = dat.data.data.noRec;
						dat.data.data.detailHVA.forEach(function (datas) {

							datas.businessImpact = {
								"id": datas.businessImpact
							}
							datas.externalResponse = {
								"id": datas.externalResponse
							}
							datas.humanImpact = {
								"id": datas.humanImpact
							}
							datas.internalResponse = {
								"id": datas.internalResponse
							}
							datas.preparedness = {
								"id": datas.preparedness
							}
							datas.probability = {
								"id": datas.probability
							}
							datas.propertyImpact = {
								"id": datas.propertyImpact
							}

							datas.risk = Math.round((((datas.probability.id) / 3) * ((datas.humanImpact.id + datas.propertyImpact.id + datas.businessImpact.id + datas.preparedness.id + datas.internalResponse.id + datas.externalResponse.id) / 18)) * 100) + "%"
							$scope.daftarDataPegawai.add(datas);
							var prob = $scope.daftarDataPegawai._aggregateResult["probability.id"].average;
							var hi = $scope.daftarDataPegawai._aggregateResult["humanImpact.id"].average;
							var pi = $scope.daftarDataPegawai._aggregateResult["propertyImpact.id"].average;
							var bi = $scope.daftarDataPegawai._aggregateResult["businessImpact.id"].average;
							var prep = $scope.daftarDataPegawai._aggregateResult["preparedness.id"].average;
							var ir = $scope.daftarDataPegawai._aggregateResult["internalResponse.id"].average;
							var er = $scope.daftarDataPegawai._aggregateResult["externalResponse.id"].average;
							$scope.totalProb = (prob / 3);
							$scope.totalSev = (hi + pi + bi + prep + ir + er) / 18;
						})

					});
				}
			});



			// $scope.Save = function () {
			// 	var dat = $scope.daftarBahanLinen._data;
			// 	console.log(JSON.stringify(dat));
			// 	var i = 0;
			// 	var mapCycle = [];
			// 	dat.forEach(function (data) {
			// 		var data = {

			// 			"namaBahan": {
			// 				"id": data.namaBahan.idProduk
			// 			},
			// 			"jumlah": parseInt(data.jumlah),
			// 			"satuan": {
			// 				"id": data.namaBahan.idSatuanStandar
			// 			}
			// 		}
			// 		mapCycle[i] = data;
			// 		i++;
			// 	})
			// 	console.log(JSON.stringify(mapCycle));
			// 	debugger;

			// 	var data = {
			// 		"mesin":
			// 		{
			// 			"id": $scope.item.mesin.idMesin
			// 		},
			// 		"jenisLinen":
			// 		{
			// 			"id": $scope.item.jenisLinen.id
			// 		},
			// 		"prosesCuci":
			// 		{
			// 			"id": $scope.item.prosesCuci.id
			// 		},

			// 		"mapCycle": mapCycle

			// 	}
			// 	// "mapCycle": $scope.daftarBahanLinen._data	
			// 	console.log(JSON.stringify(data));
			// 	// 	ManageSarpras.saveMappingCycle(data,"mapping-jenis-linen-ke-bahan/save-mapping-jenis-linen-ke-bahan").then(function(e) {
			// 	// 		$scope.item = {};
			// 	// 	// $scope.item.noMesin="",
			// 	// 	// $scope.item.jenisLinen="",
			// 	// 	// $scope.item.kapasitas="",
			// 	// 	// $scope.daftarBahanLinen._data=""

			// 	// });
			// };
		}
	]);
});
