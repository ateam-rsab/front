define(['initialize'], function (initialize) {
	'use strict';
	initialize.controller('SummaryHazardAndVulnerabilityAssessmentCtrl', ['$rootScope', '$scope', 'ModelItem', 'ManageSarpras', 'DateHelper',
		function ($rootScope, $scope, ModelItem, ManageSarpras, DateHelper) {
			$scope.item = {};
			$scope.totalRisk = 0;
			$scope.totalProb = 0;
			$scope.totalSev = 0;
			ModelItem.get("AplikasiK3/SummaryHazardAndVulnerabilityAssessment").then(function (data) {
				$scope.item = data;
				$scope.now = new Date();
				$scope.dataVOloaded = true;
			}, function errorCallBack(err) { });
			$scope.no = 1;

			$scope.dateOptions = {
				start: "decade",
				depth: "decade"
			}

			$scope.Save = function () {
				debugger;

			};

			var tanggalAwal;
			var noRec;
			var arrData = [];
			var arrSummary;
			var arrProbSev;
			$scope.$watch('item.tglAwal', function (selectedData) {
				debugger
				tanggalAwal = DateHelper.getTahunFormatted($scope.item.tglAwal);

				ManageSarpras.getOrderList("hva/get-summary-analysis/?periodeTahun=" + tanggalAwal).then(function (dat) {
					debugger;
					arrData[0] = { "nama": "Kemungkinan" };
					arrData[1] = { "nama": "Keparahan" };
					arrData[2] = { "nama": "Total" }
					dat.data.data.summaryOfMedicalHazardsAnalysis.forEach(function (datas) {
						if (datas.jenis == "Natural") {
							arrData[0].natural = datas.probability;
							arrData[1].natural = datas.severity;
							arrData[2].natural = datas.risk;
						}
						if (datas.jenis == "Technological") {
							arrData[0].technology = datas.probability;
							arrData[1].technology = datas.severity;
							arrData[2].technology = datas.risk;
						}
						if (datas.jenis == "Human") {
							arrData[0].human = datas.probability;
							arrData[1].human = datas.severity;
							arrData[2].human = datas.risk;
						}
						if (datas.jenis == "Hazmat") {
							arrData[0].hazmat = datas.probability;
							arrData[1].hazmat = datas.severity;
							arrData[2].hazmat = datas.risk;
						}
						if (datas.jenis == "totalForFacility") {
							arrData[0].total = datas.probability;
							arrData[1].total = datas.severity;
							arrData[2].total = datas.risk;
						}
					})
					$scope.summary = new kendo.data.DataSource({
						data: arrData,
						schema: {
							model: {
								id: "id",
								fields: {
									nama: { editable: false, nullable: false, validation: { required: true } },
									natural: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
									technology: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
									human: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
									hazmat: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
									total: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
								}
							}
						},


					});
					var nat, tek, mat, man;
					var prob, sev;
					dat.data.data.hazardSpecificRelativeRiskToMedical.forEach(function (datas) {

						if (datas.axis_x == "Natural") {
							nat = datas.axis_y;
						}
						if (datas.axis_x == "Technological") {
							tek = datas.axis_y;
						}
						if (datas.axis_x == "Human") {
							man = datas.axis_y;
						}
						if (datas.axis_x == "Hazmat") {
							mat = datas.axis_y;
						}
					});
					arrSummary = [{
						"alam": nat,
						"manusia": man,
						"teknologi": tek,
						"material": mat
					}]
					$scope.dataPihakLuar = new kendo.data.DataSource({
						data: arrSummary

					});
					dat.data.data.probabilitySeverityHazardsToMedical.forEach(function (datas) {

						if (datas.axis_x == "Probability") {
							prob = datas.axis_y;
						}
						if (datas.axis_x == "Severity") {
							sev = datas.axis_y;
						}

					});
					arrProbSev = [{
						"probability": prob,
						"severity": sev						
					}]
					$scope.probSev = new kendo.data.DataSource({
						data: arrProbSev

					});


				});

			});

			var init = function () {

				$scope.dataPihakLuar = new kendo.data.DataSource({
					data: arrSummary

				});
			}
			init();
			$scope.probSev = new kendo.data.DataSource({
				data: arrSummary

			});
			$scope.mainChart = {
				theme: "black",
				// categoryAxis: {
				// 	categories: ["Alam", "Teknologi","Manusia", "Material"]
				// },
				seriesDefaults: {
					type: "column",

				}

			}

			$scope.mainChart2 = {
				theme: "black",
				// categoryAxis: {
				// 	categories: ["Alam", "Teknologi","Manusia", "Material"]
				// },
				seriesDefaults: {
					type: "column",

				}

			}

			var blogComments = [
				{
					"blog": "My blog",
					"day": "1",
					"value": 3,
					"userColor": "#ffd600"
				}, {
					"blog": "My blog",
					"day": "2",
					"value": 7,
					"userColor": "#ffd600"
				}
			];

			$scope.onSeriesHover = function (e) {
				kendoConsole.log(kendo.format("event :: seriesHover ({0} : {1})", e.series.name, e.value));
			};

			$scope.theBlog = new kendo.data.DataSource({
				data: blogComments

			});

			$scope.summary = new kendo.data.DataSource({
				data: [

				],
				schema: {
					model: {
						id: "id",
						fields: {
							prob: { editable: false, nullable: false, validation: { required: true } },
							natural: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
							technology: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
							human: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
							hazmat: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
							total: { editable: false, type: "number", validation: { required: true, min: 0, max: 100 } },
						}
					}
				},


			});



			$scope.mainGridOptions2 = {
				dataSource: $scope.summary,
				pageable: false,
				editable: {
					mode: "inline",
					confirmation: true
					// template: kendo.template($("#popup-editor").html())
				},
				columns: [
					{
						"field": "nama",
						"title": "<center></center>",
						"width": "150px",

					},
					{
						"field": "natural",
						"title": "<center><h3>Alam</h3></center>",
						"width": "150px",
						attributes: { align: "center" },

					},
					{
						"field": "technology",
						"title": "<center><h3>Technology</h3></center>",
						"width": "150px",
						attributes: { align: "center" },

					},
					{
						"field": "human",
						"title": "<center><h3>Manusia</h3></center>",
						"width": "150px",
						attributes: { align: "center" },

					},
					{
						"field": "hazmat",
						"title": "<center><h3>Material</h3></center>",
						"width": "150px",
						attributes: { align: "center" },

					},
					{
						"field": "total",
						"title": "<center><h3>Total</h3></center>",
						"width": "150px",
						attributes: { align: "center" },

					}

				]
			};





		}
	]);
});
